{"version":3,"sources":["ContactForm/ContactForm.module.css","Contacts/Contacts.module.css","App/App.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","Contacts/Contacts.jsx","ContactForm/ContactForm.jsx","FilterContacts/FilterContacts.jsx","App/App.jsx","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","handleFilter","filter","payload","AddContacts","name","number","dispatch","contactsActions","axios","post","then","resp","data","catch","error","fetchContacts","get","err","removeContacts","id","delete","getFilter","state","contacts","getLoading","loading","filterContacts","createSelector","items","contact","toLowerCase","includes","mapDispatchToProps","onDelete","contactsOperations","connect","contactsSelectors","TransitionGroup","component","className","style","list","length","map","CSSTransition","timeout","classNames","item","onClick","type","ContactForm","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","toAddContacts","form","onSubmit","this","lable","input","onChange","Component","toFilter","App","toFetchContacts","Style","Container","fontColor","isLoadingContacts","createReducer","action","find","el","alert","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc653a1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1rOhN\",\"lable\":\"ContactForm_lable__31wzT\",\"form\":\"ContactForm_form__2e71M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__38zVG\",\"list\":\"Contacts_list__1dlaY\",\"enter\":\"Contacts_enter__20c8P\",\"enterActive\":\"Contacts_enterActive__1igGm\",\"exit\":\"Contacts_exit__1g6Ea\",\"exitActive\":\"Contacts_exitActive__107Mz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__x-Ulj\",\"appearActive\":\"App_appearActive__2S9zv\",\"fontColor\":\"App_fontColor__1XQUo\",\"Container\":\"App_Container__227ZQ\",\"enter\":\"App_enter__2b1UK\",\"enterActive\":\"App_enterActive__Z-rqf\",\"exit\":\"App_exit__3CbTl\",\"exitActive\":\"App_exitActive__1WBgm\"};","import { createAction } from '@reduxjs/toolkit';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import constants from '../constants.js';\r\n\r\nconst addContactsRequest = createAction('contacts/addRequest');\r\nconst addContactsSuccess = createAction('contacts/addSuccess');\r\nconst addContactsError = createAction('contacts/addError');\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchError');\r\n\r\nconst removeContactsRequest = createAction('contacts/removeRequest');\r\nconst removeContactsSuccess = createAction('contacts/removeSuccess');\r\nconst removeContactsError = createAction('contacts/removeError');\r\n\r\n\r\nconst handleFilter = createAction('contact/filter', filter=> ({payload: {filter}}) )\r\n\r\n\r\nexport default {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  handleFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n  removeContactsError\r\n}","import axios from 'axios';\r\nimport contactsActions from './contactsActions';\r\n\r\nconst AddContacts = (name, number) => dispatch => {\r\n  dispatch(contactsActions.addContactsRequest())\r\n  axios.post('http://localhost:2000/contacts', { name, number })\r\n  .then(resp => dispatch(contactsActions.addContactsSuccess(resp.data)))\r\n  .catch(error => dispatch(contactsActions.addContactsError(error)))\r\n}\r\n\r\nconst fetchContacts = () => dispatch => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n  axios.get('http://localhost:2000/contacts')\r\n    .then(resp => dispatch(contactsActions.fetchContactsSuccess(resp.data)))\r\n  .catch(err => dispatch(contactsActions.fetchContactsError(err)))\r\n}\r\n\r\nconst removeContacts = id => dispatch => {\r\n  dispatch(contactsActions.removeContactsRequest)\r\n  axios.delete(`http://localhost:2000/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactsSuccess(id)))\r\n  .catch(err => dispatch(contactsActions.removeContactsError(err)))\r\n}\r\nexport default {\r\n  AddContacts,\r\n  fetchContacts,\r\n  removeContacts\r\n}","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getContacts = state => state.contacts.items\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFilter = state => state.contacts.filter\r\n\r\nconst filterContacts = createSelector([getFilter, getContacts], (filter, contacts) => {\r\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n})\r\n\r\n// const filterContacts = state => {\r\n//   const filter = getFilter(state).toLowerCase()\r\n//   const contacts = getContacts(state);\r\n//   return (contacts.filter(contact => contact.name.toLowerCase().includes(filter)))\r\n\r\n// }\r\n\r\nexport default {\r\n  getLoading, \r\n  getFilter,\r\n  filterContacts\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup} from 'react-transition-group';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport contactsOperations from '../redux/contacts/contactsOperations.js';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\n\r\nimport style from \"./Contacts.module.css\";\r\n\r\nconst Contacts = function ({contacts, onDelete}) {\r\n  return (<TransitionGroup\r\n    component=\"ul\"\r\n    className={style.list}>\r\n    {contacts.length ? contacts.map(contact =>\r\n      <CSSTransition\r\n        key={contact.id}\r\n        timeout={250}\r\n        classNames={style} >\r\n        <li className={style.item}\r\n          key={contact.id}>{contact.name}: {contact.number}\r\n          <button onClick={() => onDelete(contact.id)} type='button'>Delete</button> </li></CSSTransition>) : []}\r\n  </TransitionGroup>)\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts:  PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  \r\n  return {\r\n    contacts: contactsSelectors.filterContacts(state)\r\n  }\r\n};\r\nconst mapDispatchToProps = {\r\n  onDelete: contactsOperations.removeContacts,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from '../redux/contacts/contactsOperations';\r\n\r\nimport style from './ContactForm.module.css'\r\n\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.toAddContacts(this.state.name, this.state.number);\r\n    this.setState({\r\n      name: '',\r\n      number: ''\r\n    })\r\n   }\r\n  render() {\r\n    return ( <form className={style.form} onSubmit={this.handleSubmit}>\r\n      <label className={style.lable}>\r\n        Name\r\n      <input className={style.input} name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\r\n      </label>\r\n      <label className={style.lable}>\r\n        Number\r\n      <input className={style.input} name=\"number\" type=\"phone\" value={this.state.number} onChange={this.handleChange} />\r\n        <button type=\"submit\">Add contact</button>\r\n      </label>\r\n    </form>)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  // const { name, number } = this.state\r\n  return {\r\n    toAddContacts: (name, number) => dispatch(contactsOperations.AddContacts(name, number)),\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from '../redux/contacts/contactsActions.js';\r\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\r\n\r\nconst Filter = ({ value, toFilter }) =>  (\r\n    <div>\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={e => toFilter(e.target.value)} />\r\n    </div>\r\n  )\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  toFilter: PropTypes.func,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state)\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  toFilter: contactsActions.handleFilter,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Contacts from '../Contacts/Contacts';\nimport ContactForm from '../ContactForm/ContactForm';\nimport Filter from '../FilterContacts/FilterContacts';\nimport contactsOperations from '../redux/contacts/contactsOperations';\nimport contactsSelectors from '../redux/contacts/contactsSelectors';\n\nimport Style from './App.module.css'\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.toFetchContacts()\n  }\n  \n  render() {\n    return (\n      <div className={Style.Container}>\n        \n        <h1 className={Style.fontColor}>Phonebook</h1>\n        <ContactForm />\n        <h2>Find contacts by name</h2>\n        <Filter />\n        <Contacts />\n      </div>\n    )}\n  \n}\n\nconst mapStateToProps = state => ({\n  isLoadingContacts: contactsSelectors.getLoading(state)\n})\n\nconst mapDispatchToProps = {\n  toFetchContacts: contactsOperations.fetchContacts\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactsActions from './contactsActions.js';\r\n\r\nconst toAddContact = (state, action) => {\r\n  const doubleName = state.find(el => el.name === action.payload.name);\r\n    if (doubleName) {\r\n      alert(`${action.payload.name} is already in contacts`);\r\n      return\r\n    }\r\n  return [...state, action.payload];\r\n}\r\nconst toDelContact = (state, action) => state.filter(contact => contact.id !== action.payload);\r\n\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\r\n  [contactsActions.addContactsSuccess]: toAddContact,\r\n  [contactsActions.removeContactsSuccess]: toDelContact,\r\n})\r\n\r\n\r\nconst filter = createReducer('', {\r\n  [contactsActions.handleFilter]: (state, action) => action.payload.filter\r\n})\r\n\r\nexport default combineReducers ({items, filter})\r\n\r\n\r\n","\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\n\r\nconst defaultMiddleware = getDefaultMiddleware(); \r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  }, \r\n  middleware: [...defaultMiddleware]\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App/App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}